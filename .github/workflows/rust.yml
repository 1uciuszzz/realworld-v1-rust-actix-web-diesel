name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_integration_and_unit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Create secrey.key
        run: cp secret.key.example secret.key
      - name: Create .env
        run: cp .env.example .env
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  test_e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: realworld-rust-actix-web
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Create secrey.key
        run: cp secret.key.example secret.key
      - name: Create .env
        run: cp .env.example .env
      - name: Build
        run: cargo build --verbose
      - name: Run server on background
        run: |
          cargo run &
          curl http://0.0.0.0:8080/api/healthcheck \
            --max-time 60 \
            --verbose \
            --retry 5 \
            --retry-delay 0 \
            --retry-connrefused
      # - name: Wait for waking server
      #   run: ./wait-for-it.sh localhost:8080 --timeout=300 --strict -- echo "Waked up container"
      # - name: Health check
      #   run:
      # - name: Ready for npx
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: "14"
      # - name: Run e2e test
      #   run: APIURL=http://localhost:8080/api sh ./e2e/run-api-tests.sh
